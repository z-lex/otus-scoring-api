[project]
name = "otus-scoring-api"
version = "0.1.0"
description = "Otus Scoring API"
readme = "README.md"
requires-python = ">=3.7"
authors = [
    { name = "A.A. Zateev", email = "z1195522@gmail.com" },
]
dependencies = ["redis"]

[build-system]
requires = [
    "setuptools",
    "setuptools_scm",
]
build-backend = "setuptools.build_meta"

[project.urls]
repository = "https://github.com/z-lex/otus-scoring-api"

[project.scripts]
otus-scoring-api-server = "otus_scoring_api.api:main"

[tool.setuptools.packages.find]
where = ["src"]

[project.optional-dependencies]
formatters = ["black", "isort", "autoflake"]
linters = ["flake8>5", "flake8-pyproject", "flake8-import-order"]
testing = ["pytest", "pytest-docker[docker-compose-v1]", "requests"]

# formatters
[tool.black]
line-length = 79
target-version = ['py310']
include = '\.pyi?$'
exclude =  '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.vscode
    | __pycache__
    | _build
    | buck-out
    | build
    | dist
    | venv.*
)/
'''

# imports formatting
[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files.html
src_paths = ['src/', 'tests.py']
reverse_relative = true
force_alphabetical_sort_within_sections = true

# make compatible with `black`
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#isort
profile = 'black'
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 79

# remove unused imports and variables
[tool.autoflake]
in_place = true
recursive = true
remove_all_unused_imports = true
ignore_init_module_imports = true

# linters
[tool.flake8]
extend_exclude = ['venv*/','build/']
max_line_length = 79
import_order_style = 'smarkets'
application_import_names = ['otus_scoring_api']
